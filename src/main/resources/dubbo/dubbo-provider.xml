<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans.xsd  
    http://code.alibabatech.com/schema/dubbo  
    http://code.alibabatech.com/schema/dubbo/dubbo.xsd"> 
    
    
    <!-- 提供方应用信息，用于计算依赖关系 -->  
    <dubbo:application name="${dubbo.application.name}" />  
    
    <!-- 注册中心暴露服务地址 --> 
    <dubbo:registry address="${dubbo.registry.address}" /> 
    
    <!-- 用dubbo协议在20880端口暴露服, 协议配置，由服务提供方指定，消费方被动接受。 --> 
    <!-- <dubbo:protocol name="${dubbo.protocol.name}" port="${dubbo.protocol.port}" /> -->
    
    <!-- 暴露dubbo服务的方式 :用xml配置方式暴露接口,使用xml配置方式申明暴露一个接口服务，在程序启动的时候会自动注册到zookeeper,等同于在类上打@service注解，打了注解就必须要用annotation指定启动扫描路径，使用这种方式，就不需要指定annotation了 -->
    <!-- <dubbo:service interface="com.example.springboot.dubbo.api.TestService" ref="testServiceImpl" retries="0" timeout="6000" group="dubbo-test"/> -->
    <!-- 具体的实现bean，id与上面的ref要一致-->
    <!-- <bean id="testServiceImpl" class="com.example.springboot.dubbo.impl.TestServiceImpl"/> -->
    
    
    <!-- 暴露dubbo服务的方式 :如果类上使用注解@service 则xml中只需要下面一句话 配置annotation扫描即可-->
    <dubbo:annotation package="com.example.springboot.dubbo.*"/>
    
    </beans>